<?xml version="1.0"?>

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">

  <!-- There's no command for "insert if missing" so this transform uses a workaround to ensure it'll work on any config file that has at least the root <configuration /> element.
       The workaround is to insert the element you want regardless of whether it's already there, and if there are now two remove the second one.        -->

  <system.web xdt:Transform="Insert" />
  <system.web xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.web[2])" />
  
  <system.web>
    <httpCookies httpOnlyCookies="true" requireSSL="true" xdt:Transform="Insert" />
    <httpCookies xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.web/httpCookies[2])" />
  </system.web>

  <system.webServer xdt:Transform="Insert" />
  <system.webServer xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.webServer[2])" />

  <system.webServer>
    <httpProtocol xdt:Transform="Insert" />
    <httpProtocol xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.webServer/httpProtocol[2])" />
    <applicationInitialization xdt:Transform="Insert" />
    <applicationInitialization xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.webServer/applicationInitialization[2])" />
    <rewrite xdt:Transform="Insert" />
    <rewrite xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.webServer/rewrite[2])" />
  </system.webServer>

  <system.webServer>
    <httpProtocol>
      <customHeaders xdt:Transform="Insert" />
      <customHeaders xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.webServer/httpProtocol/customHeaders[2])" />
    </httpProtocol>
  </system.webServer>
  
  <system.webServer>
    <rewrite>
      <rules xdt:Transform="Insert" />
      <rules xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.webServer/rewrite/rules[2])" />
    </rewrite>
  </system.webServer>
  
  <system.webServer>
    <httpProtocol>
      <customHeaders>
        <!-- Ensure SSL is used -->
        <add name="Strict-Transport-Security" xdt:Transform="Remove" xdt:Locator="Match(name)" />
        <add name="Strict-Transport-Security" value="max-age=31536000" xdt:Transform="Insert" />
      </customHeaders>
    </httpProtocol>
      <!-- Ensure SSL is used even when strict transport security is not supported
           https://github.com/projectkudu/kudu/wiki/Xdt-transform-samples#redirect-http-traffic-to-https -->
    <applicationInitialization>
      <add initializationPage="/" xdt:Transform="Remove" xdt:Locator="Match(initializationPage)" />
      <add initializationPage="/" xdt:Transform="Insert"/>
    </applicationInitialization>
      
    <rewrite>
      <rules>
        <rule name="Force HTTPS" xdt:Transform="Remove" xdt:Locator="Match(name)" />
        <rule name="Force HTTPS" enabled="true" stopProcessing="true" xdt:Transform="Insert">
          <match url="(.*)" ignoreCase="false" />
          <conditions>
            <add input="{HTTPS}" pattern="off" />
            <add input="{WARMUP_REQUEST}" pattern="1" negate="true" />
          </conditions>
          <action type="Redirect" url="https://{HTTP_HOST}/{R:1}" appendQueryString="true" redirectType="Permanent" />
        </rule>
      </rules>
    </rewrite>
  </system.webServer>

</configuration>
