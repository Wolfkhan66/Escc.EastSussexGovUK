<?xml version="1.0"?>

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">

  <!-- There's no command for "insert if missing" so this transform uses a workaround to ensure it'll work on any config file that has at least the root <configuration /> element.
       The workaround is to insert the element you want regardless of whether it's already there, and if there are now two remove the second one. 
       
       The configSections element uses a similar but different workaround from http://stackoverflow.com/questions/18737022/xdt-transform-insertbefore-locator-condition-is-ignored
       which ensures that it's the first child of <configuration />
       -->

  <configSections xdt:Transform="InsertBefore(/configuration/*[1])" />
  <configSections xdt:Locator="XPath(/configuration/configSections[last()])">
    <sectionGroup name="EsccWebTeam.Data.Web" xdt:Transform="Insert" />
    <sectionGroup name="EsccWebTeam.Data.Web" xdt:Transform="Remove" xdt:Locator="XPath(/configuration/configSections/sectionGroup[@name='EsccWebTeam.Data.Web'][2])" />
  </configSections>
  <configSections xdt:Transform="RemoveAll" xdt:Locator="Condition(count(*)=0)" />

  <configSections>
    <sectionGroup name="EsccWebTeam.Data.Web" xdt:Locator="Match(name)">
      <section name="EnforceProtocolModule" type="System.Configuration.NameValueSectionHandler, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xdt:Transform="Insert" />
      <section name="EnforceProtocolModule" xdt:Transform="Remove" xdt:Locator="XPath(/configuration/configSections/sectionGroup[@name='EsccWebTeam.Data.Web']/section[@name='EnforceProtocolModule'][2])" />
    </sectionGroup>
  </configSections>

  <EsccWebTeam.Data.Web xdt:Transform="Insert" />
  <EsccWebTeam.Data.Web xdt:Transform="Remove" xdt:Locator="XPath(/configuration/EsccWebTeam.Data.Web[2])" />

  <EsccWebTeam.Data.Web>
    <EnforceProtocolModule xdt:Transform="Remove" />
    <EnforceProtocolModule xdt:Transform="Insert">
      <add key="Default" value="https" />
    </EnforceProtocolModule>
  </EsccWebTeam.Data.Web>

  <system.web xdt:Transform="Insert" />
  <system.web xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.web[2])" />
  
  <system.web>
    <httpCookies httpOnlyCookies="true" requireSSL="true" xdt:Transform="Insert" />
    <httpCookies xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.web/httpCookies[2])" />
  </system.web>

  <system.webServer xdt:Transform="Insert" />
  <system.webServer xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.webServer[2])" />

  <system.webServer>
    <httpProtocol xdt:Transform="Insert" />
    <httpProtocol xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.webServer/httpProtocol[2])" />
    <modules xdt:Transform="Insert" />
    <modules xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.webServer/modules[2])" />
  </system.webServer>

  <system.webServer>
    <httpProtocol>
      <customHeaders xdt:Transform="Insert" />
      <customHeaders xdt:Transform="Remove" xdt:Locator="XPath(/configuration/system.webServer/httpProtocol/customHeaders[2])" />
    </httpProtocol>
  </system.webServer>
  
  <system.webServer>
    <httpProtocol>
      <customHeaders>
        <!-- Ensure SSL is used -->
        <add name="Strict-Transport-Security" xdt:Transform="Remove" xdt:Locator="Match(name)" />
        <add name="Strict-Transport-Security" value="max-age=31536000" xdt:Transform="Insert" />
      </customHeaders>
    </httpProtocol>
    <modules>
      <!-- Ensure SSL is used even when strict transport security is not supported -->
      <add name="EnforceProtocolModule" xdt:Transform="Remove" xdt:Locator="Match(name)" />
      <add name="EnforceProtocolModule" type="EsccWebTeam.Data.Web.EnforceProtocolModule" xdt:Transform="Insert" />
    </modules>
  </system.webServer>

</configuration>
